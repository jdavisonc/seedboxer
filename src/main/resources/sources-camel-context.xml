<?xml version="1.0" encoding="UTF-8"?>
<!--
  camel-context-sources.xml
  
  Copyright (c) 2012 SeedBoxer Team.
  
  This file is part of SeedBoxer.
  
  SeedBoxer is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.
  
  SeedBoxer is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
  
  You should have received a copy of the GNU General Public License
  along with SeedBoxer.  If not, see <http ://www.gnu.org/licenses/>.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd" xmlns:ns2="null">

	<!-- Endpoints and routes -->
	
	<camelContext id="camel-sources" xmlns="http://camel.apache.org/schema/spring">
	
		<contextScan/>
		<jmxAgent id="agent" disabled="true"/>
		<endpoint id="thirdPartyTimer" uri="timer://thirdpartytimer?fixedRate=true&amp;period=${thirdPartyPollPeriod}" />
		
		<onException>
		   <exception>java.lang.Exception</exception>
	        <handled>
	        	<constant>true</constant>
	        </handled>
	        <to uri="log:net.seedboxer.seedboxer.sources.Camel?level=ERROR"/>
		</onException>
		
		<route>
			<from uri="direct:mergeFeeds"/>
			<aggregate strategyRef="rssAggregationStrategy" completionTimeout="5000">
			<correlationExpression>
				<constant>true</constant>
			</correlationExpression>
			<to uri="direct:prcocessEntries"/>
			</aggregate>
		</route>
                
		<route>
		    <from uri="direct:prcocessEntries"/>
		    <process ref="rssConsumer"/>
		    <process ref="parserProcessor"/>
		    <process ref="filterProcessor"/>
		    <to uri="direct:splitDownloads"/>
		</route>
                
		<route>
		    <from uri="direct:splitDownloads"/>
		    <split>
		        <simple>body</simple>
		        <to uri="direct:processDownload"/>
		    </split>
		</route>
		
		<route>
		    <from uri="direct:processDownload"/>
		    <process ref="queueProcessor"/>
		</route>
                
                
        <!-- 3rd Party integration -->
		<route>
			<from ref="thirdPartyTimer" />
			<process ref="thirdPartyPoolerProcessor"/>
			<filter>
				<simple>${in.body} != null</simple>
				<split>
					<simple>${body}</simple>
					<to uri="direct:loadPropertiesThirdParty"/>
				</split>
			</filter>
		</route>

		<route>
			<from uri="direct:loadPropertiesThirdParty"/>
			<process ref="thirdPartyLoaderProcessor" />
			<routingSlip>
				<header>thirdParty</header>
			</routingSlip>
		</route>
	                
		<route>
		    <from uri="direct:imdb"/>
		    <process ref="imdbRequestProcessor"/>
		    <to uri="http:www.imdb.com"/>
		    <unmarshal>
		    	<csv skipFirstLine="true" />
		    </unmarshal>
		    <process ref="imdbResponseProcessor"/>
		    <to uri="direct:updateUserContent"/>
		</route>
		
		<route>
			<from uri="direct:trakt"/>
			<process ref="traktProcessor" />
			<to uri="direct:updateUserContent" />
		</route>
                
		<route>
		    <from uri="direct:updateUserContent"/>
		    <process ref="updateUserContentProcessor"/>
		</route>
                
	</camelContext>
</beans>
