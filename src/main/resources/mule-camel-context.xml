<!--
  mule-camel-context.xml
  
  Copyright (c) 2012 SeedBoxer Team.
  
  This file is part of SeedBoxer.
  
  SeedBoxer is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.
  
  SeedBoxer is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
  
  You should have received a copy of the GNU General Public License
  along with SeedBoxer.  If not, see <http ://www.gnu.org/licenses/>.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

	<!-- Endpoints and routes -->
	
	
	<camelContext id="camel" xmlns="http://camel.apache.org/schema/spring" errorHandlerRef="errorHandler">
		
		<jmxAgent id="agent" disabled="true"/>

		<errorHandler id="errorHandler" type="DeadLetterChannel" deadLetterUri="direct:notificationEndpoint" />
		
		<errorHandler id="errorHandlerFTP" type="DeadLetterChannel" deadLetterUri="direct:notificationEndpoint">
    		<redeliveryPolicy maximumRedeliveries="${ftp.retries}" redeliveryDelay="${ftp.retriesDelay}" asyncDelayedRedelivery="false"/>
		</errorHandler>
		
		<endpoint id="watchDogFileEndpoint" uri="file:${basePath}?delay=${fsPollPeriod}&amp;recursive=true&amp;delete=true&amp;readLock=${readLock}&amp;include=.*\.upl"/>
		
		<endpoint id="uploadEndpoint" uri="seda:processFile?concurrentConsumers=${numThreads}&amp;waitForTaskToComplete=Never&amp;timeout=0"/>
		
		<endpoint id="emailEndpoint" uri="smtp://${smtp.host}:${smtp.port}"/>
		
		<endpoint id="pooling" uri="timer://pool?fixedRate=true&amp;period=${fsPollPeriod}" />
		
	    <onException>
	        <exception>java.io.FileNotFoundException</exception>
			<handled>
				<constant>true</constant>
			</handled>
        	<to ref="downloadPusher"/>
	    </onException>
		
	    <!-- Get download from file and push to the queue -->
		<route>
			<from uri="watchDogFileEndpoint" />
			<process ref="fileReceiver"/>
		</route>

		<!-- Pooling queue for get new downloads -->
		<route>
			<from ref="pooling" />
			<process ref="queuePooler" />
			<filter>
				<simple>${in.body} != null</simple>
				<split>
					<simple>${body}</simple>
					<to uri="direct:processDownload" />
				</split>
			</filter>
		</route>
		
		<!-- Process download from queue -->
		<route>
			<from uri="direct:processDownload" />
			<process ref="downloadReceiver"/>
			<to ref="uploadEndpoint" />
		</route>
		
		<!-- FTP Sender -->
		<route errorHandlerRef="errorHandlerFTP">
			<from ref="uploadEndpoint" />

			<!-- Send to FTP via dynamic router -->
			<process ref="ftpSender" />
	        
	        <to uri="direct:postActionsEndpoint" />
		</route>
		
		<!-- Post Actions -->
		<route>
			<from uri="direct:postActionsEndpoint"/>
			
			<!-- SSH command sender -->
			<filter>
	           <simple>${in.header.SshCmd} != null</simple>
	           <process ref="sshCommandSender" />
	       </filter>
	       
	       <to uri="direct:notificationEndpoint" />
		</route>
		
		<!-- Notifications -->
		<route>
			<from uri="direct:notificationEndpoint"/>
			
			<!-- Email notifiction -->
			<filter>
	           <simple>${in.header.NotificationEmail} != null</simple>
	           	<process ref="emailNotification" />
	        	<to ref="emailEndpoint"/>
	        </filter>
	        
	        <!-- GCM notification -->
			<filter>
	           <simple>${in.header.NotificationGCM} != null</simple>
	           <process ref="gcmNotification" />
	        </filter>
	        
	        <to uri="direct:finale" />
		</route>
		
		<!-- Finale -->
		<route>
			<from uri="direct:finale" />
			<filter>
	        	<simple>${in.header.DownloadId} != null</simple>
				<process ref="downloadRemover" />
	        </filter>
		</route>
		
	</camelContext>
	
</beans>
